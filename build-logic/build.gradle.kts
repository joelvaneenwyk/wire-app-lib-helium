/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Support convention plugins written in Kotlin. Convention plugins are build scripts in 'src/main' that automatically become available as plugins in the main build.
    `kotlin-dsl`
}

repositories {
    // Use the plugin portal to apply community plugins in convention plugins.
    gradlePluginPortal()
    mavenCentral()
    google()
    mavenLocal()
}

dependencies {
    implementation(libs.com.wire.xenon)

    api(libs.jakarta.ws.rs.jakarta.ws.rs.api)
    api(libs.org.glassfish.tyrus.bundles.tyrus.standalone.client)
    api(libs.org.glassfish.jersey.core.jersey.client)
    api(libs.org.flywaydb.flyway.core)
    api(libs.org.glassfish.jersey.inject.jersey.hk2)
    api(libs.com.fasterxml.jackson.jaxrs.jackson.jaxrs.json.provider)

    testImplementation(libs.org.slf4j.slf4j.api)
    testImplementation(libs.org.slf4j.slf4j.log4j12)
    testImplementation(libs.javax.activation.activation)
    testImplementation(libs.org.postgresql.postgresql)
    testImplementation(libs.org.junit.jupiter.junit.jupiter)
    testImplementation(libs.org.junit.jupiter.junit.jupiter.engine)
}
